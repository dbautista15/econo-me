@startuml Econo-me Data Flow Diagram
skinparam backgroundColor white
skinparam actorBackgroundColor #FEFECE
skinparam databaseBackgroundColor #DDDDDD
skinparam arrowColor #333333
skinparam componentBackgroundColor #FEFECE

title Econo-me Data Flow Diagram

actor User

' Main components
component "Frontend (React)" as Frontend
component "Backend API" as Backend
database "PostgreSQL" as DB

' User interactions
User --> Frontend : Interacts
Frontend --> Backend : HTTP Requests
Backend --> DB : CRUD Operations
DB --> Backend : Query Results
Backend --> Frontend : JSON Responses
Frontend --> User : Displays Information

' Detailed data flows
note right of User
  User performs:
  - Login/Registration
  - Add/Edit expenses
  - Set income and goals
  - View dashboards
  - Manage budgets
end note

note right of Frontend
  Sends:
  - Authentication credentials
  - Expense transactions
  - Budget settings
  - Income details
  - Savings goals
end note

note right of Backend
  Processes:
  - User authentication
  - Data validation
  - Financial calculations
  - Budget analysis
end note

note right of DB
  Stores:
  - User accounts
  - Expense records
  - Budget constraints
  - Income history
  - Savings goals
end note

' Specific data flow scenarios
package "Key Data Flows" {
  ' Authentication flow
  component "Authentication Flow" as AuthFlow {
    User -[#blue]-> Frontend : 1. Enter credentials
    Frontend -[#blue]-> Backend : 2. Login request
    Backend -[#blue]-> DB : 3. Verify user
    DB -[#blue]-> Backend : 4. User found
    Backend -[#blue]-> Frontend : 5. JWT token
    Frontend -[#blue]-> User : 6. Login successful
  }
  
  ' Expense tracking flow
  component "Expense Tracking Flow" as ExpenseFlow {
    User -[#green]-> Frontend : 1. Add expense
    Frontend -[#green]-> Backend : 2. POST expense data
    Backend -[#green]-> DB : 3. Store expense
    DB -[#green]-> Backend : 4. Confirmation
    Backend -[#green]-> Frontend : 5. Success response
    Frontend -[#green]-> User : 6. Update UI
  }
  
  ' Dashboard data flow
  component "Dashboard Data Flow" as DashboardFlow {
    User -[#red]-> Frontend : 1. Open dashboard
    Frontend -[#red]-> Backend : 2. GET expenses, budgets, etc.
    Backend -[#red]-> DB : 3. Query data
    DB -[#red]-> Backend : 4. Return financial data
    Backend -[#red]-> Frontend : 5. Processed data
    Frontend -[#red]-> User : 6. Charts & summaries
  }
}

@enduml